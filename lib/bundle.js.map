{"version":3,"sources":["webpack:///webpack/bootstrap 5c1256d75204c0f3778e","webpack:///./lib/js/donut_crush.js","webpack:///./lib/js/board.js","webpack:///./lib/js/cell.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;;AAGA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,CAAC;;;;;;;ACXD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,yBAAyB;AAC3C,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;;;AAGA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,oBAAoB,0BAA0B;AAC9C;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,oBAAoB,0BAA0B;AAC9C;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,8BAA8B;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC,oBAAoB,sBAAsB;AAC1C;AACA;AACA,kBAAkB,SAAS,YAAY,GAAG,YAAY,EAAE;AACxD;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;AChSA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5c1256d75204c0f3778e","const Board = require(\"./board\");\n\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const board = new Board;\n//   const boardEl = document.querySelector(\".board\").innerHTML = board.grid;\n// });\n\n$( () => {\n  const boardEl = $('.board');\n  new Board(boardEl);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/js/donut_crush.js\n// module id = 0\n// module chunks = 0","const Cell = require(\"./cell\");\n\nconst GRIDSIZE = 8;\nconst COLORS = [\"red\", \"orange\", \"green\", \"blue\", \"purple\"];\nconst IMGPOS = [\"640px 625px\", \"570px 625px\", \"570px 680px\", \"502px 680px\", \"502px 626px\"];\nconst EXPLOSION_SRC = \"./lib/images/explosion.png\";\nconst EXPLOSION_POS = [\"699px 566px\"];\nconst CELL_SRC = \"./lib/images/donut-mini.png\";\n//blue \"502px 530px\"\n// green \"502px 626px\"\n//yellow \"502px 680px\"\n//pink \"639px 680px\"\n// brown \"570px 680px\"\n//hotpink \"570px 625px\"\n//purple \"640px 625px\"\n// explosion \"699px 566px\"\nconst DIRECTIONS = [[-1, 0], [0, 1], [1, 0], [0, -1]];\n\nclass Board {\n  constructor($el){\n    this.$el = $el;\n    this.grid = this.fillGrid();\n    this.$firstClick = undefined;\n    this.$secondClick = undefined;\n    this.matches = undefined;\n\n    this.createCell = this.createCell.bind(this);\n    this.getColor = this.getColor.bind(this);\n    this.removeCell = this.removeCell.bind(this);\n    this.swapCells = this.swapCells.bind(this);\n    this.checkSwap = this.checkSwap.bind(this);\n    this.isValidPos = this.isValidPos.bind(this);\n    this.findVerticalMatch = this.findVerticalMatch.bind(this);\n    this.findHorizontalMatch = this.findHorizontalMatch.bind(this);\n    this.getVerticalMatch = this.getVerticalMatch.bind(this);\n    this.noMatches = this.noMatches.bind(this);\n\n    this.makeGrid = this.makeGrid.bind(this);\n    this.fillGrid = this.fillGrid.bind(this);\n    this.clearGrid = this.clearGrid.bind(this);\n\n    this.resetClick = this.resetClick.bind(this);\n    this.getPos = this.getPos.bind(this);\n    this.getImgPos = this.getImgPos.bind(this);\n\n\n    // findVerticalMatch - find matches\n    // findHorizontalMatch - find matches\n    // removeCell - remove matches from initial board, matches = defined\n    //  - change image to explosion, matches = defined\n    //  - replace with new cell and donut, matches = defined\n    //  - noMatches - call removeCell(true) and removeCell() until no more matches\n    // bindEvents - add event handler to swap cells, matches = undefined\n    // swapCells - swap cells on grid\n    // resetClick - reset cell swap clicks\n    // clearGrid - clear grid\n    // setupGrid - re-populate board\n    // removeCell - remove matches from board after user move\n    // bindEvents - add event handle to swap cells again\n\n    // this.noMatches();\n    this.removeCell();\n    this.bindEvents();\n    // this.setupGrid();\n  }\n\n  removeCell(explosion){\n    console.log(\"explosion\", explosion)\n    this.matches = this.matches === undefined ?\n    this.findHorizontalMatch().concat(this.findVerticalMatch()) :\n    this.matches;\n\n    console.log(\"matches\",this.matches)\n\n    for(let i = 0; i < this.matches.length; i++){\n      for(let j = 0; j < this.matches[i].length; j++){\n        const pos = this.matches[i][j].pos;\n        if (explosion){\n          this.grid[pos[0]][pos[1]].imgPos = EXPLOSION_POS[0];\n          this.grid[pos[0]][pos[1]].src = EXPLOSION_SRC;\n        } else {\n          this.grid[pos[0]][pos[1]].imgPos = this.getImgPos();\n          this.grid[pos[0]][pos[1]].src = CELL_SRC;\n        }\n      }\n    }\n    console.log(\"removeCell\", this.grid);\n    this.clearGrid();\n    this.setupGrid();\n  }\n\n  noMatches(){\n    // debugger\n    // this.matches = this.findHorizontalMatch().concat(this.findVerticalMatch());\n    //\n    // while(this.matches.length > 0){\n    //   this.matches = undefined;\n    //   this.removeCell(true);\n    //   setTimeout(() => {this.removeCell();}, 3000);\n    // }\n  }\n\n\n  findHorizontalMatch(){\n    const matches = [];\n    let matchLength = 1;\n    for(let i = 0; i < this.grid.length; i++){\n      for(let j = 0; j < this.grid.length - 1; j++){\n        if (this.grid[i][j].imgPos === null) {\n          continue;\n        } else if (this.grid[i][j].imgPos === this.grid[i][j+1].imgPos){\n          matchLength ++;\n        } else if (matchLength >= 3){\n          matches.push(this.grid[i].slice(j+1-matchLength, j+1));\n          matchLength = 1;\n        } else {\n          matchLength = 1;\n        }\n      }\n      if(matchLength >= 3){\n        matches.push(this.grid[i].slice(this.grid.length-matchLength, this.grid.length));\n      }\n      matchLength = 1;\n    }\n    return matches;\n  }\n\n  findVerticalMatch(){\n    const matches = [];\n    let matchLength = 1;\n    for(let i = 0; i < this.grid.length; i++){\n      for(let j = 0; j < this.grid.length - 1; j++){\n        if (this.grid[j][i].imgPos === null) {\n          continue;\n        } else if (this.grid[j][i].imgPos === this.grid[j+1][i].imgPos){\n          matchLength ++;\n        } else if (matchLength >= 3){\n          matches.push(this.getVerticalMatch(i, j, matchLength));\n          matchLength = 1;\n        } else {\n          matchLength = 1;\n        }\n      }\n      if(matchLength >= 3){\n        matches.push(this.getVerticalMatch(i, this.grid.length - 1, matchLength));\n      }\n      matchLength = 1;\n    }\n    return matches;\n  }\n\n  getVerticalMatch(col, row, matchLength){\n    const match = [];\n    for(let i = row+1-matchLength; i < row+1; i++){\n      match.push(this.grid[i][col]);\n    }\n    return match;\n  }\n\n  bindEvents(){\n    this.$el.on(\"click\", \"li\", (e => {\n      if (this.$firstClick){\n        this.matches = undefined;\n        this.$secondClick = e.currentTarget;\n        console.log(\"second click\")\n        console.log(this.$secondClick);\n        this.checkSwap();\n      } else {\n        this.$firstClick = e.currentTarget;\n        console.log(\"first click\")\n        console.log(this.$firstClick);\n      }\n    }));\n  }\n\n  getPos(){\n    const firstPos = this.$firstClick.id.split(\"-\").map(el => (\n      parseInt(el)\n    ));\n    const secondPos = this.$secondClick.id.split(\"-\").map(el => (\n      parseInt(el)\n    ));\n\n    return {firstPos, secondPos};\n  }\n\n  makeGrid(){\n    const grid = new Array(GRIDSIZE);\n    for(let i = 0; i < grid.length; i++){\n      grid[i] = new Array(GRIDSIZE);\n    }\n    return grid;\n  }\n\n  fillGrid(){\n    const grid = this.makeGrid();\n    for(let i = 0; i < grid.length; i++){\n      for(let j = 0; j < grid[i].length; j++){\n        grid[i][j] = this.createCell([i, j]);\n      }\n    }\n    return grid;\n  }\n\n  getColor(){\n    return COLORS[Math.floor(Math.random() * COLORS.length)];\n  }\n\n  getImgPos(){\n    return IMGPOS[Math.floor(Math.random() * IMGPOS.length)];\n  }\n\n  createCell(pos){\n    return new Cell({pos, imgPos: this.getImgPos()});\n  }\n\n  swapCells(){\n    const positions = this.getPos();\n    const firstPos = positions.firstPos;\n    const secondPos = positions.secondPos;\n\n    [this.grid[firstPos[0]][firstPos[1]].imgPos,\n    this.grid[secondPos[0]][secondPos[1]].imgPos] =\n    [this.grid[secondPos[0]][secondPos[1]].imgPos,\n    this.grid[firstPos[0]][firstPos[1]].imgPos];\n  }\n\n  checkSwap(){\n    if(this.isValidPos()){\n      console.log(\"valid pos\")\n      this.swapCells();\n      if(this.findHorizontalMatch().concat(this.findVerticalMatch()).length > 0){\n        console.log(\"move will destroy\")\n        this.removeCell(true);\n        setTimeout(() => {this.removeCell();}, 3000);\n      } else {\n        console.log(\"invalid move\")\n        this.swapCells();\n      }\n    }\n    this.resetClick();\n  }\n\n  resetClick(){\n    this.$firstClick = undefined;\n    this.$secondClick = undefined;\n  }\n\n  clearGrid(){\n    this.$el.empty();\n  }\n\n  setupGrid(){\n    const $ul = $(\"<ul>\");\n    $ul.addClass(\"cells-list\");\n\n    for(let i = 0; i < this.grid.length; i++){\n      for(let j = 0; j < this.grid.length; j++){\n        let cell = this.grid[i][j];\n        let $li = $(\"<li>\");\n        $li.attr({'id': `${cell.pos[0]}-${cell.pos[1]}`});\n        $li.css({\n          \"height\": cell.height,\n          \"width\": cell.width,\n          \"background-image\": `url(${cell.src})`,\n          \"background-position\": cell.imgPos\n        });\n        $ul.append($li);\n      }\n    }\n    this.$el.append($ul);\n  }\n\n\n  isValidPos(){\n    const firstPos = this.getPos().firstPos;\n    const secondPos = this.getPos().secondPos;\n\n    for(let i = 0; i < DIRECTIONS.length; i++){\n      if(secondPos[0] === firstPos[0]+DIRECTIONS[i][0] &&\n         secondPos[1] === firstPos[1]+DIRECTIONS[i][1]){\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/js/board.js\n// module id = 1\n// module chunks = 0","\n\nconst DEFAULTS = {\n  HEIGHT: 50,\n  WIDTH: 50,\n  SRC: \"./lib/images/donut-mini.png\"\n};\n\nclass Cell {\n  constructor(options = {}){\n    this.height = DEFAULTS.HEIGHT;\n    this.width = DEFAULTS.WIDTH;\n    this.pos = options.pos;\n    this.src = DEFAULTS.SRC;\n    this.imgPos = options.imgPos;\n  }\n}\n\nmodule.exports = Cell;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/js/cell.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}